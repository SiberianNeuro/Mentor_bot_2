from aiogram import types

from loader import bot
from app.keyboards import admin_kb
from app.keyboards.admin_kb import get_delete_button


async def report_wrapper(data: tuple, msg: types.Message):
    """
    –û–±–æ–ª–æ—á–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞.
    param: data: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ SQL
    param: m: –æ–±—ä–µ–∫—Ç —Ç–µ–ª–µ–≥—Ä–∞–º API - —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    print(data)
    id, document_id, fullname, stage, result, score, link, calls = data[:8]
    retake_date = data[8] if data[8] is not None else "-"
    if result == "–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ ‚úÖ":
        await msg.answer_document(document_id,
                                  caption=f'<b>{fullname}</b>\n'
                                          f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {stage}\n'
                                          f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {result}\n'
                                          f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {score}\n'
                                          f'–°—Å—ã–ª–∫–∞ YT: {link}\n'
                                          f'–ó–≤–æ–Ω–∫–∏: \n{calls}',
                                  reply_markup=await get_delete_button(id)
                                  )
        await msg.answer('–ú—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏, –º—ã –º–æ–ª–æ–¥—Ü—ã üëå', reply_markup=await admin_kb.get_admin_kb())
        if stage in ("–û–ø—Ä–æ—Å –Ω–∞ –ò.–û.", "–û–ø—Ä–æ—Å –Ω–∞ –≤—Ä–∞—á–∞", "–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è —Å—Ç–∞–∂–µ—Ä–∞ L1"):
            await bot.send_document(
                -781832035, document_id,
                caption=f'<b>{fullname}</b>\n–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞: {stage}\n–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: {result}\n–°—Å—ã–ª–∫–∞ YT: {link}\n–ó–≤–æ–Ω–∫–∏:\n{calls}'
            )
        await bot.send_document(
            -1001776821827, document_id,
            caption=f'<b>{fullname}</b>\n–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞: {stage}\n–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: {result}\n–°—Å—ã–ª–∫–∞ YT: {link}\n–ó–≤–æ–Ω–∫–∏:\n{calls}'
        )
    elif result == "–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞ ‚ùå":
        await msg.answer_document(document_id,
                                  caption=f'<b>{fullname}</b>\n'
                                          f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {stage}\n'
                                          f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {result}\n'
                                          f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {score}\n'
                                          f'<i>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è. –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</i>\n'
                                          f'–°—Å—ã–ª–∫–∞ YT: {link}',
                                  reply_markup=await get_delete_button(id))
        await msg.answer('–ú—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏, –º—ã –º–æ–ª–æ–¥—Ü—ã üëå', reply_markup=await admin_kb.get_admin_kb())
        await bot.send_document(
            -781832035, document_id,
            caption=f'<b>{fullname}</b>\n'
                    f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞: {stage}\n'
                    f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: {result}\n'
                    f'<i>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è. –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</i>\n'
                    f'–°—Å—ã–ª–∫–∞ YT: {link}'
        )
        await bot.send_document(
            -1001776821827, document_id,
            caption=f'<b>{fullname}</b>\n'
                    f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞: {stage}\n'
                    f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: {result}\n'
                    f'<i>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è. –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</i>\n'
                    f'–°—Å—ã–ª–∫–∞ YT: {link}'
        )
    elif data[4] == "–ù–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É ‚ö†Ô∏è":
        await msg.answer_document(document_id,
                                  caption=f'<b>{fullname}</b>\n'
                                          f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {stage}\n'
                                          f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {result}\n'
                                          f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {score}\n'
                                          f'–î–∞—Ç–∞ –ø–µ—Ä–µ–∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {retake_date}\n'
                                          f'–°—Å—ã–ª–∫–∞ YT: {link}',
                                  reply_markup=await get_delete_button(id)
                                  )
        await msg.answer('–ú—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏, –º—ã –º–æ–ª–æ–¥—Ü—ã üëå', reply_markup=await admin_kb.get_admin_kb())
        await bot.send_document(
            -1001776821827, document_id,
            caption=f'<b>{fullname}</b>\n'
                    f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞: {stage}\n'
                    f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: {result}\n'
                    f'–î–∞—Ç–∞ –ø–µ—Ä–µ–∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {retake_date}\n'
                    f'–°—Å—ã–ª–∫–∞ YT: {link}'
        )


async def search_wrapper(resp, msg: types.Message):
    """
        –û–±–æ–ª–æ—á–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞.
        param: resp: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ SQL
        param: m: –æ–±—ä–µ–∫—Ç —Ç–µ–ª–µ–≥—Ä–∞–º API - —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
    for data in resp:
        retake_date = data[8] if data[8] is not None else "-"
        if data[4] == "–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ ‚úÖ":
            await msg.answer_document(data[1],
                                      caption=f'<b>{data[2]}</b>\n'
                                              f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {data[3]}\n'
                                              f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {data[4]}\n'
                                              f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {data[5]}\n'
                                              f'–°—Å—ã–ª–∫–∞ YT: {data[6]}\n'
                                              f'–ó–≤–æ–Ω–∫–∏: \n{data[7]}',
                                      reply_markup=await get_delete_button(data[0])
                                      )
        elif data[4] == "–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞ ‚ùå":
            await msg.answer_document(data[1],
                                      caption=f'<b>{data[2]}</b>\n'
                                              f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {data[3]}\n'
                                              f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {data[4]}\n'
                                              f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {data[5]}\n'
                                              f'<i>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è. –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</i>\n'
                                              f'–°—Å—ã–ª–∫–∞ YT: {data[6]}',
                                      reply_markup=await get_delete_button(data[0])
                                      )
        elif data[4] == "–ù–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É ‚ö†Ô∏è":
            await msg.answer_document(data[1],
                                      caption=f'<b>{data[2]}</b>\n'
                                              f'–§–æ—Ä–º–∞—Ç –æ–ø—Ä–æ—Å–∞ - {data[3]}\n'
                                              f'–°—Ç–∞—Ç—É—Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {data[4]}\n'
                                              f'–ù–∞–±—Ä–∞–Ω–æ –±–∞–ª–ª–æ–≤ - {data[5]}\n'
                                              f'–î–∞—Ç–∞ –ø–µ—Ä–µ–∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ - {retake_date}\n'
                                              f'–°—Å—ã–ª–∫–∞ YT: {data[6]}',
                                      reply_markup=await get_delete_button(data[0])
                                      )


async def user_wrapper(user_data: tuple):
    """

    :param user_data: —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    :return: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    user_info = user_data
    user_id = user_info[0]
    string = ''
    if user_info[-1] in (9, 10, 11):
        string = f'<b>{user_info[1]}</b> {user_info[2]}\n\n' \
                 f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: {user_info[3]}\n' \
                 f'–ì–æ—Ä–æ–¥: {user_info[4]}\n' \
                 f'–ú–µ–¥. –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {user_info[5]}\n\n' \
                 f'–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: {user_info[9]}\n' \
                 f'e-mail: {user_info[10]}'
    elif user_info[-1] in (5, 6, 7, 8):
        string = f'<b>{user_info[1]}</b> {user_info[2]}\n\n' \
                 f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: {user_info[3]}\n' \
                 f'–ì–æ—Ä–æ–¥: {user_info[4]}\n' \
                 f'–û—Ä–¥–∏–Ω–∞—Ç—É—Ä–∞: {user_info[5]}\n' \
                 f'–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {user_info[6]}\n' \
                 f'–ì–æ–¥ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {user_info[7]}\n' \
                 f'–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user_info[8]}\n\n' \
                 f'–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: {user_info[9]}\n' \
                 f'e-mail: {user_info[10]}'
    return string, user_id
